policy_module(bind)

########################################
#
# Declarations
#

## <desc>
##	<p>
##	Determine whether Bind can bind tcp socket to http ports.
##	</p>
## </desc>
gen_tunable(named_tcp_bind_http_port, false)

## <desc>
##	<p>
##	Determine whether Bind can write to master zone files.
##	Generally this is used for dynamic DNS or zone transfers.
##	</p>
## </desc>
gen_tunable(named_write_master_zones, false)

attribute_role ndc_roles;

type dnssec_t;
files_security_file(dnssec_t)
files_mountpoint(dnssec_t)

type named_t;
type named_exec_t;
init_daemon_domain(named_t, named_exec_t)

type named_checkconf_exec_t;
init_system_domain(named_t, named_checkconf_exec_t)

type named_conf_t;
files_type(named_conf_t)
files_mountpoint(named_conf_t)

# for secondary zone files
type named_cache_t;
files_type(named_cache_t)

type named_initrc_exec_t;
init_script_file(named_initrc_exec_t)

type named_keytab_t;
files_type(named_keytab_t)

type named_log_t;
logging_log_file(named_log_t)

type named_runtime_t alias named_var_run_t;
files_runtime_file(named_runtime_t)
init_daemon_runtime_file(named_runtime_t, dir, "named")

type named_tmp_t;
files_tmp_file(named_tmp_t)

type named_unit_t;
init_unit_file(named_unit_t)

# for primary zone files
type named_zone_t;
files_type(named_zone_t)

type ndc_t;
type ndc_exec_t;
init_system_domain(ndc_t, ndc_exec_t)
role ndc_roles types ndc_t;

########################################
#
# Local policy
#

allow named_t self:capability { chown dac_override fowner setgid setuid sys_chroot sys_nice sys_resource };
dontaudit named_t self:capability sys_tty_config;
allow named_t self:process { setsched getsched getcap setcap setrlimit signal_perms };
allow named_t self:fifo_file rw_fifo_file_perms;
allow named_t self:unix_stream_socket { accept listen };
allow named_t self:tcp_socket { accept listen };

manage_files_pattern(named_t, dnssec_t, dnssec_t)
filetrans_pattern(named_t, named_conf_t, dnssec_t, dir, "cache")

allow named_t named_conf_t:dir list_dir_perms;
read_files_pattern(named_t, named_conf_t, named_conf_t)
read_lnk_files_pattern(named_t, named_conf_t, named_conf_t)

manage_files_pattern(named_t, named_cache_t, named_cache_t)
manage_lnk_files_pattern(named_t, named_cache_t, named_cache_t)

allow named_t named_keytab_t:file read_file_perms;

append_files_pattern(named_t, named_log_t, named_log_t)
create_files_pattern(named_t, named_log_t, named_log_t)
setattr_files_pattern(named_t, named_log_t, named_log_t)
logging_log_filetrans(named_t, named_log_t, file)

manage_dirs_pattern(named_t, named_tmp_t, named_tmp_t)
manage_files_pattern(named_t, named_tmp_t, named_tmp_t)
files_tmp_filetrans(named_t, named_tmp_t, { file dir })

manage_dirs_pattern(named_t, named_runtime_t, named_runtime_t)
manage_files_pattern(named_t, named_runtime_t, named_runtime_t)
manage_sock_files_pattern(named_t, named_runtime_t, named_runtime_t)
files_runtime_filetrans(named_t, named_runtime_t, { dir file sock_file })

can_exec(named_t, named_exec_t)

allow named_t named_zone_t:dir list_dir_perms;
read_files_pattern(named_t, named_zone_t, named_zone_t)
read_lnk_files_pattern(named_t, named_zone_t, named_zone_t)

kernel_read_net_sysctls(named_t)
kernel_read_vm_sysctls(named_t)
kernel_read_kernel_sysctls(named_t)
kernel_read_vm_overcommit_sysctl(named_t)
kernel_read_system_state(named_t)
kernel_read_network_state(named_t)

corecmd_search_bin(named_t)

corenet_all_recvfrom_netlabel(named_t)
corenet_tcp_sendrecv_generic_if(named_t)
corenet_udp_sendrecv_generic_if(named_t)
corenet_tcp_sendrecv_generic_node(named_t)
corenet_udp_sendrecv_generic_node(named_t)
corenet_tcp_bind_generic_node(named_t)
corenet_udp_bind_generic_node(named_t)

corenet_sendrecv_all_server_packets(named_t)
corenet_tcp_bind_dns_port(named_t)
corenet_udp_bind_dns_port(named_t)

corenet_tcp_bind_rndc_port(named_t)

corenet_dontaudit_udp_bind_all_reserved_ports(named_t)
corenet_udp_bind_all_unreserved_ports(named_t)

corenet_sendrecv_all_client_packets(named_t)
corenet_tcp_connect_all_ports(named_t)

dev_read_sysfs(named_t)
dev_read_rand(named_t)
dev_read_urand(named_t)

domain_use_interactive_fds(named_t)

files_read_etc_runtime_files(named_t)
files_read_usr_files(named_t)
files_map_usr_files(named_t)

fs_getattr_all_fs(named_t)
fs_search_auto_mountpoints(named_t)

auth_use_nsswitch(named_t)

logging_send_syslog_msg(named_t)

miscfiles_read_generic_certs(named_t)
miscfiles_read_localization(named_t)
miscfiles_read_generic_tls_privkey(named_t)

userdom_dontaudit_use_unpriv_user_fds(named_t)
userdom_dontaudit_search_user_home_dirs(named_t)

tunable_policy(`named_tcp_bind_http_port',`
	corenet_sendrecv_http_server_packets(named_t)
	corenet_tcp_bind_http_port(named_t)
')

tunable_policy(`named_write_master_zones',`
	manage_dirs_pattern(named_t, named_zone_t, named_zone_t)
	manage_files_pattern(named_t, named_zone_t, named_zone_t)
	manage_lnk_files_pattern(named_t, named_zone_t, named_zone_t)
')

optional_policy(`
	dbus_system_domain(named_t, named_exec_t)

	init_dbus_chat_script(named_t)

	sysnet_dbus_chat_dhcpc(named_t)

	optional_policy(`
		networkmanager_dbus_chat(named_t)
	')
')

optional_policy(`
	kerberos_read_keytab(named_t)
	kerberos_use(named_t)
')

optional_policy(`
	ldap_stream_connect(named_t)
')

optional_policy(`
	networkmanager_rw_udp_sockets(named_t)
	networkmanager_rw_packet_sockets(named_t)
	networkmanager_rw_routing_sockets(named_t)
')

optional_policy(`
	seutil_sigchld_newrole(named_t)
')

########################################
#
# NDC local policy
#

allow ndc_t self:capability { dac_override net_admin };
allow ndc_t self:capability2 block_suspend;
allow ndc_t self:process signal_perms;
allow ndc_t self:fifo_file rw_fifo_file_perms;
allow ndc_t self:unix_stream_socket { accept listen };

allow ndc_t dnssec_t:file read_file_perms;
allow ndc_t dnssec_t:lnk_file read_lnk_file_perms;

stream_connect_pattern(ndc_t, named_runtime_t, named_runtime_t, named_t)

allow ndc_t named_conf_t:file read_file_perms;
allow ndc_t named_conf_t:lnk_file read_lnk_file_perms;

allow ndc_t named_zone_t:dir search_dir_perms;

kernel_read_kernel_sysctls(ndc_t)
kernel_read_system_state(ndc_t)

corenet_all_recvfrom_netlabel(ndc_t)
corenet_tcp_sendrecv_generic_if(ndc_t)
corenet_tcp_sendrecv_generic_node(ndc_t)
corenet_tcp_bind_generic_node(ndc_t)

corenet_tcp_connect_rndc_port(ndc_t)
corenet_sendrecv_rndc_client_packets(ndc_t)

domain_use_interactive_fds(ndc_t)

files_search_runtime(ndc_t)

fs_getattr_xattr_fs(ndc_t)

term_dontaudit_use_console(ndc_t)

auth_use_nsswitch(ndc_t)

init_use_fds(ndc_t)
init_use_script_ptys(ndc_t)

logging_send_syslog_msg(ndc_t)

miscfiles_read_localization(ndc_t)

userdom_use_user_terminals(ndc_t)

ifdef(`distro_redhat',`
	allow ndc_t named_conf_t:dir search_dir_perms;
')

optional_policy(`
	ppp_dontaudit_use_fds(ndc_t)
')
