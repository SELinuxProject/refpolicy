## <summary>GNOME color manager.</summary>

########################################
## <summary>
##	Execute a domain transition to run colord.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`colord_domtrans',`
	gen_require(`
		type colord_t, colord_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, colord_exec_t, colord_t)
')

########################################
## <summary>
##	Send and receive messages from
##	colord over dbus.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`colord_dbus_chat',`
	gen_require(`
		type colord_t;
		class dbus send_msg;
	')

	allow $1 colord_t:dbus send_msg;
	allow colord_t $1:dbus send_msg;
')

######################################
## <summary>
##	Read colord lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`colord_read_lib_files',`
	gen_require(`
		type colord_var_lib_t;
	')

	files_search_var_lib($1)
	read_files_pattern($1, colord_var_lib_t, colord_var_lib_t)
')

######################################
## <summary>
##	relabel colord lib files and dirs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`colord_relabel_lib',`
	gen_require(`
		type colord_var_lib_t;
	')

	allow $1 colord_var_lib_t:dir { list_dir_perms relabelfrom relabelto };
	allow $1 colord_var_lib_t:file { relabelfrom relabelto };
')
