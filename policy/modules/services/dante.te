policy_module(dante, 1.13.0)

########################################
#
# Declarations
#

type dante_t;
type dante_exec_t;
init_daemon_domain(dante_t, dante_exec_t)

type dante_initrc_exec_t;
init_script_file(dante_initrc_exec_t)

type dante_conf_t;
files_config_file(dante_conf_t)

type dante_runtime_t alias dante_var_run_t;
files_pid_file(dante_runtime_t)

########################################
#
# Local policy
#

allow dante_t self:capability { setgid setuid };
dontaudit dante_t self:capability sys_tty_config;
allow dante_t self:process signal_perms;
allow dante_t self:fifo_file rw_fifo_file_perms;
allow dante_t self:tcp_socket { accept listen };

allow dante_t dante_conf_t:dir list_dir_perms;
allow dante_t dante_conf_t:file read_file_perms;

manage_files_pattern(dante_t, dante_runtime_t, dante_runtime_t)
files_pid_filetrans(dante_t, dante_runtime_t, file)

kernel_read_kernel_sysctls(dante_t)
kernel_list_proc(dante_t)
kernel_read_proc_symlinks(dante_t)

corenet_all_recvfrom_unlabeled(dante_t)
corenet_all_recvfrom_netlabel(dante_t)
corenet_tcp_sendrecv_generic_if(dante_t)
corenet_tcp_sendrecv_generic_node(dante_t)
corenet_tcp_bind_generic_node(dante_t)

corenet_sendrecv_socks_server_packets(dante_t)
corenet_tcp_bind_socks_port(dante_t)

dev_read_sysfs(dante_t)

domain_use_interactive_fds(dante_t)

files_read_etc_files(dante_t)
files_read_etc_runtime_files(dante_t)

fs_getattr_all_fs(dante_t)
fs_search_auto_mountpoints(dante_t)

init_write_utmp(dante_t)

logging_send_syslog_msg(dante_t)

miscfiles_read_localization(dante_t)

sysnet_dns_name_resolve(dante_t)

userdom_dontaudit_use_unpriv_user_fds(dante_t)
userdom_dontaudit_search_user_home_dirs(dante_t)

optional_policy(`
	seutil_sigchld_newrole(dante_t)
')

optional_policy(`
	udev_read_pid_files(dante_t)
')
