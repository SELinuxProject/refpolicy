## <summary>Cockpit web management system for Linux</summary>
##
## <desc>
## Cockpit is a web console that enables users to administer Linux servers
## via a web browser.
## see https://cockpit-project.org/
## </desc>

########################################
## <summary>
##	Transition to the cockpit session domin.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`cockpit_domtrans_session',`
	gen_require(`
		type cockpit_session_t, cockpit_session_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, cockpit_session_exec_t, cockpit_session_t)
')

########################################
## <summary>
##	Execute cockpit server in the cockpit domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`cockpit_systemctl',`
	gen_require(`
		type cockpit_ws_t;
		type cockpit_unit_file_t;
		class service { start stop status reload enable disable };
	')

	init_reload($1)
        systemd_use_passwd_agent($1)
	allow $1 cockpit_unit_file_t:file read_file_perms;
	allow $1 cockpit_unit_file_t:service { start stop status reload enable disable };

	ps_process_pattern($1, cockpit_ws_t)
')


########################################
## <summary>
##	All of the rules required to administrate
##	an cockpit environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`cockpit_admin',`
	gen_require(`
		type cockpit_ws_t;
		type cockpit_session_t;
		type cockpit_var_lib_t;
		type cockpit_runtime_t;
		type cockpit_unit_file_t;
	')

	allow $1 cockpit_ws_t:process { signal_perms };
	ps_process_pattern($1, cockpit_ws_t)

	allow $1 cockpit_session_t:process { signal_perms };
	ps_process_pattern($1, cockpit_session_t)

	allow $1 cockpit_ws_t:process ptrace;
	allow $1 cockpit_session_t:process ptrace;

	files_search_var_lib($1)
	admin_pattern($1, cockpit_var_lib_t)

	admin_pattern($1, cockpit_runtime_t)

	cockpit_systemctl($1)
	admin_pattern($1, cockpit_unit_file_t)
	allow $1 cockpit_unit_file_t:service all_service_perms;
')
